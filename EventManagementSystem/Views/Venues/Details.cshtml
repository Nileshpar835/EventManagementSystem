@model EventManagementSystem.Models.Venue

@{
    ViewData["Title"] = Model.Name;
    Layout = "_Layout";
}

<div class="bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <nav class="flex mb-8" aria-label="Breadcrumb">
            <ol class="flex items-center space-x-4">
                <li>
                    <div>
                        <a href="/" class="text-gray-400 hover:text-gray-500">
                            <i class="fas fa-home"></i>
                            <span class="sr-only">Home</span>
                        </a>
                    </div>
                </li>
                <li>
                    <div class="flex items-center">
                        <i class="fas fa-chevron-right text-gray-400 text-sm"></i>
                        <a href="/Venues" class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700">Venues</a>
                    </div>
                </li>
                <li>
                    <div class="flex items-center">
                        <i class="fas fa-chevron-right text-gray-400 text-sm"></i>
                        <span class="ml-4 text-sm font-medium text-gray-500" aria-current="page">@Model.Name</span>
                    </div>
                </li>
            </ol>
        </nav>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div class="lg:col-span-2">
                <div class="bg-white shadow rounded-lg overflow-hidden mb-8">
                    <div class="relative h-96">
                        <img src="@Model.ImageUrl" alt="@Model.Name" class="w-full h-full object-cover">
                        <div class="absolute top-4 left-4">
                            @if (Model.IsAvailable)
                            {
                                <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800">
                                    <i class="fas fa-check-circle mr-1.5"></i>
                                    Available
                                </span>
                            }
                            else
                            {
                                <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium bg-red-100 text-red-800">
                                    <i class="fas fa-times-circle mr-1.5"></i>
                                    Unavailable
                                </span>
                            }
                        </div>
                        
                        <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-6">
                            <h1 class="text-3xl font-bold text-white mb-2">@Model.Name</h1>
                            <p class="text-white/90 flex items-center text-lg">
                                <i class="fas fa-map-marker-alt mr-2"></i>
                                @Model.Location
                            </p>
                        </div>
                    </div>
                    @if (Model.AdditionalImagesList != null && Model.AdditionalImagesList.Any())
                    {
                        <div class="p-4">
                            <div class="grid grid-cols-5 gap-2">
                                @foreach (var image in Model.AdditionalImagesList.Take(5))
                                {
                                    <div class="group relative aspect-w-1 aspect-h-1 rounded-lg overflow-hidden cursor-pointer hover:opacity-90 transition-all duration-300 shadow-sm hover:shadow-md">
                                        <img src="@image" alt="Additional view of @Model.Name" class="w-full h-full object-cover">
                                        <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                            <i class="fas fa-expand text-white text-xl"></i>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="bg-white shadow rounded-lg overflow-hidden mb-8">
                    <div class="p-6">
                        <div class="flex justify-between items-start mb-6">
                            <div class="flex items-center space-x-4">
                                <div class="text-gray-500">
                                    <span class="font-medium">@Model.ReviewCount</span> reviews
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-2xl font-bold text-primary-600">
                                    ₹@Model.PricePerHour
                                </span>
                                <span class="text-gray-500">/hour</span>
                            </div>
                        </div>

                        <div class="mb-8">
                            <h2 class="text-xl font-semibold text-gray-900 mb-4">About this venue</h2>
                            <p class="text-gray-700 leading-relaxed">
                                @Model.Description
                            </p>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                    <i class="fas fa-list-ul text-primary-500 mr-2"></i>
                                    Features
                                </h3>
                                <ul class="space-y-3">
                                    @foreach (var feature in Model.FeaturesList)
                                    {
                                        <li class="flex items-center text-gray-700">
                                            <span class="flex-shrink-0 w-6 h-6 flex items-center justify-center rounded-full bg-primary-100 text-primary-600">
                                                <i class="fas fa-check text-sm"></i>
                                            </span>
                                            <span class="ml-3">@feature</span>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                    <i class="fas fa-info-circle text-primary-500 mr-2"></i>
                                    Details
                                </h3>
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between py-2 border-b border-gray-200">
                                        <span class="text-gray-600">Capacity</span>
                                        <span class="font-medium text-gray-900">@Model.Capacity people</span>
                                    </div>
                                    <div class="flex items-center justify-between py-2 border-b border-gray-200">
                                        <span class="text-gray-600">Venue Size</span>
                                        <span class="font-medium text-gray-900">@Model.Size sq ft</span>
                                    </div>
                                    <div class="flex items-center justify-between py-2 border-b border-gray-200">
                                        <span class="text-gray-600">Venue Types</span>
                                        <div class="flex flex-wrap gap-2 justify-end">
                                            @foreach (var type in Model.VenueTypesList)
                                            {
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    @type
                                                </span>
                                            }
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between py-2">
                                        <span class="text-gray-600">Cleaning Fee</span>
                                        <span class="font-medium text-gray-900">₹@Model.CleaningFee</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-white shadow rounded-lg overflow-hidden mb-8">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">
                        <i class="fas fa-map-marked-alt mr-2 text-red-500"></i>
                        Location
                    </h3>
                    <div class="h-64 bg-gray-200 rounded-lg mb-2">
                        <div class="h-full flex items-center justify-center">
                            <div class="mapouter">
                                <div class="gmap_canvas">
                                    <iframe class="gmap_iframe" width="100%" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com/maps?width=600&height=300&hl=en&q=@(Uri.EscapeDataString(Model.Location))&t=k&z=14&ie=UTF8&iwloc=B&output=embed
"></iframe><a href="https://embed-googlemap.com">google map embed html</a>
                                </div><style>                                          .mapouter {
                                              position: relative;
                                              text-align: right;
                                              width: 100%;
                                              height: 300px;
                                          }

                                          .gmap_canvas {
                                              overflow: hidden;
                                              background: none !important;
                                              width: 100%;
                                              height: 280px;
                                          }

                                          .gmap_iframe {
                                              height: 300px !important;
                                          }</style>
                            </div>
                        </div>
                    </div>
                    <p class="text-gray-700">
                        @Model.Address , @Model.Location
                    </p>
                </div>
                <div class="bg-white shadow rounded-lg overflow-hidden mb-8">
                    <div class="p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6">Reviews</h2>
                        <div class="space-y-6">
                            @if (Model.Reviews != null && Model.Reviews.Any())
                            {
                                @foreach (var review in Model.Reviews.Take(3))
                                {
                                    <div class="border-b border-gray-200 pb-6 last:border-0 last:pb-0">
                                        <div class="flex items-start">
                                            <img class="h-10 w-10 rounded-full mr-4" src="@(review.UserImage ?? "/images/default-profile.jpg")" alt="@review.UserName">
                                            <div class="flex-grow">
                                                <div class="flex items-center justify-between">
                                                    <div>
                                                        <h3 class="text-sm font-medium text-gray-900">@review.UserName</h3>
                                                        <div class="flex items-center mt-1">
                                                            @for (int i = 1; i <= 5; i++)
                                                            {
                                                                if (i <= review.Rating)
                                                                {
                                                                    <i class="fas fa-star text-yellow-400 text-sm"></i>
                                                                }
                                                                else
                                                                {
                                                                    <i class="far fa-star text-yellow-400 text-sm"></i>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                    <span class="text-sm text-gray-500">@review.Date.ToString("MMM dd, yyyy")</span>
                                                </div>
                                                <p class="mt-2 text-sm text-gray-700">
                                                    @review.Comment
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-8">
                                    <p class="text-gray-500">No reviews yet. Be the first to review this venue!</p>
                                </div>
                            }
                        </div>

                        <div class="mt-6 text-center">
                            <a href="#" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                                View All @Model.ReviewCount Reviews
                                <i class="fas fa-arrow-right ml-2"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="bg-white shadow rounded-lg overflow-hidden">
                    <div class="p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6">Similar Venues You May Like</h2>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                            @foreach (var similarVenue in Model.SimilarVenues.Take(2))
                            {
                                <div class="bg-gray-50 rounded-lg overflow-hidden">
                                    <div class="h-48 relative">
                                        <img src="@similarVenue.ImageUrl" alt="@similarVenue.Name" class="w-full h-full object-cover">
                                    </div>
                                    <div class="p-4">
                                        <div class="flex justify-between items-start">
                                            <h3 class="text-lg font-medium text-gray-900">@similarVenue.Name</h3>
                                            <div class="flex items-center">
                                                <i class="fas fa-star text-yellow-400 mr-1"></i>
                                                <span class="text-sm text-gray-600">@similarVenue.Rating</span>
                                            </div>
                                        </div>
                                        <p class="mt-1 text-sm text-gray-500 flex items-center">
                                            <i class="fas fa-map-marker-alt mr-1"></i>
                                            @similarVenue.Location
                                        </p>
                                        <div class="mt-4 flex justify-between items-center">
                                            <span class="text-primary-600 font-medium">₹@similarVenue.PricePerHour/hr</span>
                                            <a href="/Venues/Details/@similarVenue.Id" class="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                                View
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="lg:col-span-1">
                <div class="bg-white shadow rounded-lg overflow-hidden mb-8 sticky top-8">
                    <div class="p-6">
                        <div class="flex justify-between items-center mb-6">
                            <span class="text-2xl font-bold text-gray-900">₹@Model.PricePerHour</span>
                            <span class="text-gray-500">per hour</span>
                        </div>
                        <form id="bookingForm">
                            <div class="space-y-4">
                                <div>
                                    <label for="booking-date" class="block text-sm font-medium text-gray-700 mb-1">
                                        Select Date
                                    </label>
                                    <input
                                        type="date"
                                        id="booking-date"
                                        name="booking-date"
                                        class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm"
                                        min="@DateTime.Now.ToString("yyyy-MM-dd")"
                                    />
                                </div>

                                <div class="grid grid-cols-2 gap-4">
                                    <div>
                                        <label for="start-time" class="block text-sm font-medium text-gray-700 mb-1">
                                            Start Time
                                        </label>
                                        <select
                                            id="start-time"
                                            name="start-time"
                                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm"
                                            onchange="calculatePrice()"
                                        >
                                            <option value="">Select</option>
                                            <option value="09:00">9:00 AM</option>
                                            <option value="10:00">10:00 AM</option>
                                            <option value="11:00">11:00 AM</option>
                                            <option value="12:00">12:00 PM</option>
                                            <option value="13:00">1:00 PM</option>
                                            <option value="14:00">2:00 PM</option>
                                            <option value="15:00">3:00 PM</option>
                                            <option value="16:00">4:00 PM</option>
                                            <option value="17:00">5:00 PM</option>
                                            <option value="18:00">6:00 PM</option>
                                            <option value="19:00">7:00 PM</option>
                                            <option value="20:00">8:00 PM</option>
                                        </select>
                                    </div>
                                    <div>
                                        <label for="end-time" class="block text-sm font-medium text-gray-700 mb-1">
                                            End Time
                                        </label>
                                        <select
                                            id="end-time"
                                            name="end-time"
                                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm"
                                            onchange="calculatePrice()"
                                        >
                                            <option value="">Select</option>
                                            <option value="10:00">10:00 AM</option>
                                            <option value="11:00">11:00 AM</option>
                                            <option value="12:00">12:00 PM</option>
                                            <option value="13:00">1:00 PM</option>
                                            <option value="14:00">2:00 PM</option>
                                            <option value="15:00">3:00 PM</option>
                                            <option value="16:00">4:00 PM</option>
                                            <option value="17:00">5:00 PM</option>
                                            <option value="18:00">6:00 PM</option>
                                            <option value="19:00">7:00 PM</option>
                                            <option value="20:00">8:00 PM</option>
                                            <option value="21:00">9:00 PM</option>
                                            <option value="22:00">10:00 PM</option>
                                        </select>
                                    </div>
                                </div>

                                <div>
                                    <label for="guests" class="block text-sm font-medium text-gray-700 mb-1">
                                        Number of Guests
                                    </label>
                                    <input
                                        type="number"
                                        id="guests"
                                        name="guests"
                                        min="1"
                                        max="@Model.Capacity"
                                        placeholder="Enter number of guests"
                                        class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm"
                                    />
                                </div>
                            </div>

                            <div class="mt-8 space-y-4">
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">₹<span id="price-per-hour">@Model.PricePerHour</span> × <span id="hours-count">0</span> hours</span>
                                    <span class="text-gray-900 font-medium">₹<span id="venue-total">0.00</span></span>
                                </div>
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">Service fee</span>
                                    <span class="text-gray-900 font-medium">₹<span id="service-fee">0.00</span></span>
                                </div>
                                <div class="flex justify-between text-sm">
                                    <span class="text-gray-600">Cleaning fee</span>
                                    <span class="text-gray-900 font-medium">₹<span id="cleaning-fee">@Model.CleaningFee</span></span>
                                </div>
                                <div class="pt-4 border-t border-gray-200 flex justify-between">
                                    <span class="text-lg font-medium text-gray-900">Total</span>
                                    <span class="text-lg font-bold text-gray-900">₹<span id="total-price">0.00</span></span>
                                </div>
                            </div>

                            <div class="mt-6">
                                <button
                                    type="button"
                                    id="book-now-btn"
                                    class="w-full inline-flex justify-center items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
                                    onclick="proceedToCheckout()"
                                >
                                    Book Now
                                </button>
                            </div>
                        </form>

                        <div class="mt-4 text-center text-sm text-gray-500">
                            You won't be charged yet
                        </div>
                    </div>
                </div>
                <div class="bg-white shadow rounded-lg overflow-hidden">
                    <div class="p-6">
                        <div class="flex items-center mb-6">
                            <img class="h-12 w-12 rounded-full mr-4" src="@Model.HostImage" alt="Host">
                            <div>
                                <h3 class="text-base font-medium text-gray-900">Owned by @Model.HostName</h3>
                                <p class="text-sm text-gray-500">Member since @Model.HostMemberSince.ToString("MMMM yyyy")</p>
                            </div>
                        </div>
                        <div class="space-y-2 mb-6">
                            <div class="flex items-center text-sm">
                                <i class="fas fa-check-circle text-green-500 mr-2"></i>
                                <span class="text-gray-700">@Model.HostBookingCount bookings</span>
                            </div>
                            <div class="flex items-center text-sm">
                                <i class="fas fa-check-circle text-green-500 mr-2"></i>
                                <span class="text-gray-700">Response rate: @Model.HostResponseRate%</span>
                            </div>
                            <div class="flex items-center text-sm">
                                <i class="fas fa-check-circle text-green-500 mr-2"></i>
                                <span class="text-gray-700">Response time: within @Model.HostResponseTime hours</span>
                            </div>
                        </div>
                        <div class="mt-6">
                            <button class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                                <i class="far fa-comment-alt mr-2"></i>
                                Contact Owner
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const pricePerHour = @Model.PricePerHour;
        const cleaningFee = @Model.CleaningFee;
        const venueId = @Model.Id;

        function calculatePrice() {
            const startTime = document.getElementById('start-time').value;
            const endTime = document.getElementById('end-time').value;
            
            if (!startTime || !endTime) {
                document.getElementById('hours-count').textContent = '0';
                document.getElementById('venue-total').textContent = '0.00';
                document.getElementById('service-fee').textContent = '0.00';
                document.getElementById('total-price').textContent = '0.00';
                return;
            }
            const startHour = parseInt(startTime.split(':')[0]);
            const endHour = parseInt(endTime.split(':')[0]);
            if (endHour <= startHour) {
                alert('End time must be after start time');
                document.getElementById('end-time').value = '';
                return;
            }
            const hoursCount = endHour - startHour;
            const venueTotal = pricePerHour * hoursCount;
            const serviceFee = venueTotal * 0.1; // 10% service fee
            const totalPrice = venueTotal + serviceFee + cleaningFee;
            
            document.getElementById('hours-count').textContent = hoursCount;
            document.getElementById('venue-total').textContent = venueTotal.toFixed(2);
            document.getElementById('service-fee').textContent = serviceFee.toFixed(2);
            document.getElementById('total-price').textContent = totalPrice.toFixed(2);
        }
        
        function proceedToCheckout() {
            const startTime = document.getElementById('start-time').value;
            const endTime = document.getElementById('end-time').value;
            const bookingDate = document.getElementById('booking-date').value;
            const guestCount = document.getElementById('guests').value;
            
            if (!startTime || !endTime || !bookingDate || !guestCount) {
                alert('Please fill in all required fields');
                return;
            }
            const startHour = parseInt(startTime.split(':')[0]);
            const endHour = parseInt(endTime.split(':')[0]);
            const hoursCount = endHour - startHour;
            const venueTotal = pricePerHour * hoursCount;
            const serviceFee = venueTotal * 0.1;
            const totalPrice = venueTotal + serviceFee + cleaningFee;
            const bookingData = {
                venueId: venueId,
                venueName: '@Model.Name',
                venueImage: '@Model.ImageUrl',
                date: bookingDate,
                startTime: startTime,
                endTime: endTime,
                hours: hoursCount,
                guestCount: guestCount,
                pricePerHour: pricePerHour,
                venueTotal: venueTotal,
                serviceFee: serviceFee,
                cleaningFee: cleaningFee,
                totalPrice: totalPrice
            };
            sessionStorage.setItem('bookingData', JSON.stringify(bookingData));
            window.location.href = "/Bookings/Checkout";
        }

        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            const dateInput = document.getElementById('booking-date');
            dateInput.min = today;
            dateInput.addEventListener('change', function() {
                const selectedDate = new Date(this.value);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                if (selectedDate < today) {
                    alert('Please select a future date');
                    this.value = today.toISOString().split('T')[0];
                }
            });
        });
    </script>
} 