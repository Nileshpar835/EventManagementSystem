@model dynamic

<div class="bg-white shadow-lg rounded-lg overflow-hidden p-6">
    <div class="mb-6">
        <h2 class="text-2xl font-bold text-gray-900 mb-2">Venue Reviews</h2>
        <div class="flex items-center">
            <div class="flex items-center">
                <span class="text-3xl font-bold text-gray-900">@Model.AverageRating</span>
                <span class="text-gray-500 ml-2">/ 5</span>
            </div>
            <div class="ml-4 flex items-center">
                @for (var i = 0; i < 5; i++)
                {
                    <i class="fas fa-star @(i < Math.Floor(Model.AverageRating) ? "text-yellow-400" : "text-gray-300") mr-1"></i>
                }
            </div>
            <span class="ml-4 text-sm text-gray-500">(@Model.TotalReviews reviews)</span>
        </div>
    </div>

    <div class="mb-6 grid grid-cols-2 gap-6">
        <div class="bg-gray-50 rounded-lg p-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">
                Positive Reviews
                <span class="text-sm text-gray-500">(@Model.PositiveReviews)</span>
            </h3>
            <div class="flex items-center">
                <div class="flex-1 bg-gray-200 rounded-full h-4">
                    @{
                        var positivePercentage = Model.TotalReviews > 0 ? (Model.PositiveReviews * 100.0 / Model.TotalReviews) : 0;
                    }
                    <div class="bg-green-500 h-4 rounded-full" style="width: @positivePercentage%"></div>
                </div>
                <span class="ml-3 text-sm font-medium text-gray-700">@Math.Round((double)positivePercentage)%</span>
            </div>
        </div>
        
        <div class="bg-gray-50 rounded-lg p-4">
            <h3 class="text-lg font-medium text-gray-900 mb-2">
                Negative Reviews
                <span class="text-sm text-gray-500">(@Model.NegativeReviews)</span>
            </h3>
            <div class="flex items-center">
                <div class="flex-1 bg-gray-200 rounded-full h-4">
                    @{
                        var negativePercentage = Model.TotalReviews > 0 ? (Model.NegativeReviews * 100.0 / Model.TotalReviews) : 0;
                    }
                    <div class="bg-red-500 h-4 rounded-full" style="width: @negativePercentage%"></div>
                </div>
                <span class="ml-3 text-sm font-medium text-gray-700">@Math.Round((double)negativePercentage)%</span>
            </div>
        </div>
    </div>

    <div class="mt-8">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Recent Reviews</h3>
        <div class="space-y-4">
            @foreach (var review in Model.Reviews)
            {
                <div class="bg-gray-50 rounded-lg p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <h4 class="text-base font-medium text-gray-900">@review.CustomerName</h4>
                            <p class="text-sm text-gray-500">@review.VenueName</p>
                        </div>
                        <div class="flex items-center">
                            @for (var i = 0; i < 5; i++)
                            {
                                <i class="fas fa-star @(i < review.Rating ? "text-yellow-400" : "text-gray-300") text-sm mr-0.5"></i>
                            }
                        </div>
                    </div>
                    <p class="mt-2 text-sm text-gray-600">@review.Comment</p>
                    <p class="mt-1 text-xs text-gray-500">@review.Date.ToString("MMM dd, yyyy")</p>
                </div>
            }
        </div>
    </div>
    
    @if (Model.TotalReviews == 0)
    {
        <div class="text-center py-10">
            <i class="fas fa-star text-4xl text-gray-400 mb-3"></i>
            <p class="text-gray-500">No reviews found for your venues yet.</p>
        </div>
    }
</div> 