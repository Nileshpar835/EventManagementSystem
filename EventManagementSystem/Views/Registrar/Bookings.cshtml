@model IEnumerable<EventManagementSystem.Models.Booking>

@{
    ViewData["Title"] = "Venue Bookings";
    Layout = "_RegistrarLayout";
}

<div id="dynamic-content">
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="success-alert" class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 relative rounded-md" role="alert">
            <div class="flex">
                <div class="py-1"><i class="fas fa-check-circle text-green-500 mr-3"></i></div>
                <div>
                    <p class="font-bold">Success</p>
                    <p>@TempData["SuccessMessage"]</p>
                </div>
            </div>
            <button onclick="document.getElementById('success-alert').remove()" class="absolute top-0 right-0 mt-4 mr-4 text-green-500 hover:text-green-700">
                <i class="fas fa-times"></i>
            </button>
        </div>
    }

    <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:px-6 border-b border-gray-200 flex justify-between items-center">
            <h1 class="text-2xl font-bold text-gray-900">Venue Bookings</h1>
            <div class="flex space-x-2">
                <div class="relative">
                    <select id="status-filter" onchange="filterBookings()" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md">
                        <option value="all">All Status</option>
                        <option value="confirmed">Confirmed</option>
                        <option value="pending">Pending</option>
                        <option value="cancelled">Cancelled</option>
                        <option value="completed">Completed</option>
                    </select>
                </div>
                <div class="relative">
                    <select id="venue-filter" onchange="filterBookings()" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md">
                        <option value="all">All Venues</option>
                        @foreach (var venue in Model.Where(b => b.Venue != null).Select(b => b.Venue).DistinctBy(v => v.Id))
                        {
                            <option value="@venue.Id">@venue.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="divide-y divide-gray-200">
            <div class="hidden md:grid md:grid-cols-6 text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3 bg-gray-50">
                <div class="col-span-2">Customer / Event</div>
                <div>Venue</div>
                <div>Date & Time</div>
                <div>Status</div>
                <div>Actions</div>
            </div>

            @if (Model.Any())
            {
                foreach (var booking in Model)
                {
                    <div class="booking-item px-4 py-5 sm:px-6 hover:bg-gray-50 transition-colors duration-150" 
                        data-status="@booking.Status.ToLower()" 
                        data-venue="@booking.VenueId">
                        <div class="md:grid md:grid-cols-6 md:gap-4">
                            <div class="col-span-2">
                                <div class="flex items-center">
                                    <img class="h-10 w-10 rounded-full object-cover" 
                                         src="@(!string.IsNullOrEmpty(booking.CustomerProfilePicture) ? booking.CustomerProfilePicture : $"https://ui-avatars.com/api/?name={booking.CustomerName}&background=0284c7&color=fff")" 
                                         alt="@booking.CustomerName"
                                         onerror="this.src='https://ui-avatars.com/api/?name=@(Uri.EscapeDataString(booking.CustomerName))&background=0284c7&color=fff'">
                                    <div class="ml-3">
                                        <div class="text-sm font-medium text-gray-900">@booking.CustomerName</div>
                                        <div class="text-sm text-gray-500">@booking.CustomerEmail</div>
                                        <div class="mt-1 text-xs text-primary-600 font-medium">
                                            @booking.EventTitle
                                            <span class="text-gray-500 ml-1">(@booking.EventType)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4 md:mt-0">
                                <div class="text-sm font-medium text-gray-900">@booking.VenueName</div>
                                <div class="text-xs text-gray-500">
                                    <i class="fas fa-users mr-1"></i> @booking.GuestCount guests
                                </div>
                            </div>
                            <div class="mt-4 md:mt-0">
                                <div class="text-sm font-medium text-gray-900">
                                    @booking.Date.ToString("MMM dd, yyyy")
                                </div>
                                <div class="text-xs text-gray-500">
                                    <i class="far fa-clock mr-1"></i> @booking.StartTime - @booking.EndTime
                                </div>
                            </div>
                            <div class="mt-4 md:mt-0">
                                <span class="px-2 py-1 text-xs rounded-full @(booking.Status == "Confirmed" ? "bg-green-100 text-green-800" : 
                                                                            booking.Status == "Pending" ? "bg-yellow-100 text-yellow-800" : 
                                                                            booking.Status == "Cancelled" ? "bg-red-100 text-red-800" :
                                                                            "bg-blue-100 text-blue-800")">
                                    @booking.Status
                                </span>
                            </div>
                            <div class="mt-4 md:mt-0 flex flex-wrap gap-2">
                                <button type="button" onclick="showBookingDetails(@booking.Id)" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                    <i class="fas fa-info-circle mr-1"></i>
                                    Details
                                </button>
                                
                                @if (booking.Status == "Pending")
                                {
                                    <button type="button" onclick="confirmBooking(@booking.Id)" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                        <i class="fas fa-check mr-1"></i>
                                        Confirm
                                    </button>
                                    <button type="button" onclick="cancelBooking(@booking.Id)" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <i class="fas fa-times mr-1"></i>
                                        Cancel
                                    </button>
                                }
                                
                                @if (booking.Status == "Confirmed")
                                {
                                    <button type="button" onclick="completeBooking(@booking.Id)" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                        <i class="fas fa-check-double mr-1"></i>
                                        Complete
                                    </button>
                                    <button type="button" onclick="cancelBooking(@booking.Id)" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                        <i class="fas fa-times mr-1"></i>
                                        Cancel
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-12">
                    <i class="fas fa-calendar-times text-5xl text-gray-400 mb-4"></i>
                    <h3 class="text-lg font-medium text-gray-900">No bookings found</h3>
                    <p class="mt-1 text-sm text-gray-500">There are no bookings for your venues yet.</p>
                </div>
            }
        </div>
    </div>
</div>
<div id="booking-details-modal" class="fixed inset-0 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeBookingDetails()"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <div id="booking-details-content">
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" onclick="closeBookingDetails()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showBookingDetails(id) {
            fetch(`/Registrar/BookingDetails/${id}`, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(html => {
                document.getElementById('booking-details-content').innerHTML = html;
                document.getElementById('booking-details-modal').classList.remove('hidden');
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error loading booking details');
            });
        }

        function closeBookingDetails() {
            document.getElementById('booking-details-modal').classList.add('hidden');
        }

        function confirmBooking(id) {
            if (confirm('Are you sure you want to confirm this booking?')) {
                fetch(`/Registrar/ConfirmBooking/${id}`, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Error confirming booking');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error confirming booking');
                });
            }
        }

        function cancelBooking(id) {
            if (confirm('Are you sure you want to cancel this booking?')) {
                fetch(`/Registrar/CancelBooking/${id}`, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Error cancelling booking');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error cancelling booking');
                });
            }
        }

        function completeBooking(id) {
            if (confirm('Are you sure you want to mark this booking as completed?')) {
                fetch(`/Registrar/CompleteBooking/${id}`, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Error completing booking');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error completing booking');
                });
            }
        }

        function filterBookings() {
            const statusFilter = document.getElementById('status-filter').value;
            const venueFilter = document.getElementById('venue-filter').value;
            
            document.querySelectorAll('.booking-item').forEach(item => {
                const status = item.getAttribute('data-status');
                const venue = item.getAttribute('data-venue');
                
                const statusMatch = statusFilter === 'all' || status === statusFilter;
                const venueMatch = venueFilter === 'all' || venue === venueFilter;
                
                item.style.display = statusMatch && venueMatch ? '' : 'none';
            });
        }
    </script>
}
</div>